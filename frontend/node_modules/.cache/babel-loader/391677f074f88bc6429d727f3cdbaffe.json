{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admi9n\\\\FSND (mesh)\\\\FSND\\\\projects\\\\02_trivia_api\\\\starter\\\\frontend\\\\src\\\\components\\\\FormView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      fetch(\"/questions\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: Number(this.state.difficulty),\n          category: Number(this.state.category)\n        })\n      }).then(() => {\n        document.getElementById(\"add-question-form\").reset();\n        return;\n      }).catch(error => {\n        alert('Unable to add question. Please try your request again');\n        return;\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/categories', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    }).then(res => res.json()).then(({\n      categories\n    }) => {\n      this.setState({\n        categories\n      });\n    }).catch(error => {\n      alert('Unable to load categories. Please try your request again');\n      return;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"add-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add a New Trivia Question\"), React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-question-form\",\n      onSubmit: this.submitQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Question\", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-input\",\n      name: \"question\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Answer\", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-input\",\n      name: \"answer\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Difficulty\", React.createElement(\"select\", {\n      name: \"difficulty\",\n      className: \"form-input\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"5\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Category\", React.createElement(\"select\", {\n      name: \"category\",\n      className: \"form-input\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.categories.map(({\n      id,\n      type\n    }) => {\n      return React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, type);\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["C:\\Users\\Admi9n\\FSND (mesh)\\FSND\\projects\\02_trivia_api\\starter\\frontend\\src\\components\\FormView.js"],"names":["React","Component","FormView","constructor","props","submitQuestion","event","preventDefault","fetch","method","headers","body","JSON","stringify","question","state","answer","difficulty","Number","category","then","document","getElementById","reset","catch","error","alert","handleChange","setState","target","name","value","categories","componentDidMount","res","json","render","map","id","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport '../stylesheets/FormView.css';\r\n\r\nclass FormView extends Component {\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      question: \"\",\r\n      answer: \"\",\r\n      difficulty: 1,\r\n      category: 1,\r\n      categories: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('/categories',{\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n    }).then((res) => res.json())\r\n    .then(({categories}) => {\r\n      this.setState({categories});\r\n    }).catch((error) => {\r\n      alert('Unable to load categories. Please try your request again')\r\n      return;\r\n    })\r\n  }\r\n\r\n  submitQuestion = (event) => {\r\n    event.preventDefault();\r\n    fetch(`/questions`,{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        difficulty: Number(this.state.difficulty),\r\n        category: Number(this.state.category)\r\n      }),\r\n    })\r\n    .then( () => {\r\n      document.getElementById(\"add-question-form\").reset();\r\n      return;\r\n    }).catch((error) => {\r\n        alert('Unable to add question. Please try your request again')\r\n        return;\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"add-form\">\r\n        <h2>Add a New Trivia Question</h2>\r\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\r\n          <label>\r\n            Question\r\n            <input type=\"text\" className=\"form-input\" name=\"question\" onChange={this.handleChange}/>\r\n          </label>\r\n          <label>\r\n            Answer\r\n            <input type=\"text\"  className=\"form-input\" name=\"answer\" onChange={this.handleChange}/>\r\n          </label>\r\n          <label>\r\n            Difficulty\r\n            <select name=\"difficulty\"  className=\"form-input\" onChange={this.handleChange}>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Category\r\n            <select name=\"category\"  className=\"form-input\" onChange={this.handleChange}>\r\n              {this.state.categories.map(({id, type}) => {\r\n                  return (\r\n                    <option key={id} value={id}>{type}</option>\r\n                  )\r\n                })}\r\n            </select>\r\n          </label>\r\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n"]},"metadata":{},"sourceType":"module"}